# HOMEWORK 3
## KENNY OSELEONONMEN 
### KOSELEO1

> Life is hard 
*-David Gerrold*
---
# Summary
I broke this homework into 4 parts
* Parse text file
* Get input from user [continuously]
* Find Occurrences
* Spit it out
---
## Parse text file
* Using a switch statemen, I built a character array consisting of every character in our text file that satisfied the requirements.
* My parse_file method took in a pointer to an array of 15,001 chars. This is where it stored the created array
* I learned the hard way that calling `sizeof(pointer)/sizeof(char)` on a pointer always returned 8 so I calloc'd my array so that I can find the length of it using `strlen()`
---
## Get input from user
* More or less just homework1
* I have a switch statement here too that checks whether the users input satisfies requirements.
* if it satisfies requirements, I create an array and pass that array to pattern_match
---
## Find Occurrences.
* my pattern_match is a pattern match with the pattern_match provided in the homework prompt
* However, I returned the offset rather than the total number of matches
---
## Spit it Out
* Spitting it out is handled by a function show_match()
* Originally this was in my main function but in order to show matches when the user enters ctrl + d before a space character, it had to be put in it's own function
* My code shows matches in real time, i.e immediately a user hits a space character.
* I considered ways of not having it be real time but didn't come up with anything sufficient
---
# Testing 
* My tests are all automated
* I create a file with an name I expect you wouldn't have on your computer so as to not overwrite anything 
* I write to the file a lot of white space characters so I can make sure my parser parses correctly
* I then use the array from this to test that my pattern_match produces adequate offsets for a host of different input arrays
* I did not test max input or minimum input because the parsing of these is handled by my main funciton

> Thank you.

